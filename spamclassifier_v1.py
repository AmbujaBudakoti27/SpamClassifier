# -*- coding: utf-8 -*-
"""SpamClassifier_v1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-gMgtF_iARcHvFCqBb277E63Szu5085I
"""

import pandas as pd
url = 'https://raw.githubusercontent.com/AmbujaBudakoti27/SpamClassifier/main/SMSSpamCollection'
messages = pd.read_csv(url, sep='\t', names=['label', 'message'])

import re
import nltk
nltk.download('stopwords')
from nltk.corpus import stopwords
nltk.download('wordnet')
from nltk.stem import WordNetLemmatizer
lm=WordNetLemmatizer()
corpus=[]

for i in range(0, len(messages)):
  m = re.sub('[^a-zA-Z]', ' ', messages['message'][i])
  m = m.lower()
  m = m.split()
  m = [lm.lemmatize(word) for word in m if not word in stopwords.words('english')]
  m = ' '.join(m)
  corpus.append(m)

from sklearn.feature_extraction.text import TfidfVectorizer
tv = TfidfVectorizer()
X = tv.fit_transform(corpus).toarray()

y = pd.get_dummies(messages['label'])
y = y.iloc[:,1].values

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state = 0)

from sklearn.naive_bayes import MultinomialNB
spam_detect_model = MultinomialNB().fit(X_train, y_train)
y_pred = spam_detect_model.predict(X_test)

from sklearn.metrics import confusion_matrix
confusion_m = confusion_matrix(y_test, y_pred)
confusion_m

from sklearn.metrics import accuracy_score
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy for this model is: ", accuracy)